{"version":3,"file":"static/js/294.7fe9f467.chunk.js","mappings":"gMACA,GAAgB,QAAU,uBAAuB,UAAY,yBAAyB,WAAa,0BAA0B,cAAgB,6BAA6B,YAAc,2BAA2B,oBAAsB,mCAAmC,OAAS,sBAAsB,iBAAmB,gCAAgC,aAAe,4BAA4B,YAAc,2BAA2B,WAAa,0BAA0B,MAAQ,qBAAqB,WAAa,0BAA0B,QAAU,wB,gDCOjiBA,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbC,GAAWC,EAAAA,EAAAA,MAsBXC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KACJC,MAAM,wBACNC,SAAS,kBACZC,SAAUH,EAAAA,KACPE,SAAS,kBACTE,IAAI,EAAG,sCAGZ,OACE,SAAC,KAAD,CACEC,cA/BkB,CACpBJ,MAAO,GACPE,SAAU,GACVG,YAAY,GA6BVP,iBAAkBA,EAClBQ,SA3Ba,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACzCC,QAAQC,IAAI,YAAaJ,GACzBX,GACEgB,EAAAA,EAAAA,IACEL,EAAOP,MACPO,EAAOL,SACPK,EAAOF,WACPE,EAAOZ,QACPc,EACAD,KAeJ,SAKG,SAACK,GACA,OACE,UAAC,KAAD,YACE,gBAAKC,UAAWC,EAAAA,WAAhB,UACE,iBAAKD,UAAWC,EAAAA,YAAhB,WACE,sCACA,iBAAKD,UAAWC,EAAAA,WAAhB,WACE,gBAAKD,UAAWC,EAAAA,MAAhB,UACE,SAAC,KAAD,CAAcC,KAAK,aAErB,SAAC,KAAD,CAAOC,KAAK,QAAQD,KAAK,QAAQE,YAAY,oBAInD,gBAAKJ,UAAWC,EAAAA,cAAhB,UACE,iBAAKD,UAAWC,EAAAA,YAAhB,WACE,yCACA,gBAAKD,UAAWC,EAAAA,MAAhB,UACE,SAAC,KAAD,CAAcC,KAAK,WAAWF,UAAWC,EAAAA,WAE3C,SAAC,KAAD,CAAOE,KAAK,WAAWD,KAAK,WAAWE,YAAY,mBAGvD,iBAAKJ,UAAWC,EAAAA,aAAhB,WACE,iBAAKD,UAAWC,EAAAA,WAAhB,WACE,SAAC,KAAD,CAAOE,KAAK,WAAWD,KAAK,eAD9B,iBAICrB,IACC,iBAAKmB,UAAWC,EAAAA,QAAhB,WACE,gBAAKI,IAAKxB,EAASmB,UAAWC,EAAAA,kBAC9B,SAAC,KAAD,CACEE,KAAK,OACLD,KAAK,UACLF,UAAWC,EAAAA,qBAIjB,mBACED,UAAWC,EAAAA,YACXE,KAAM,SACNG,UAAWP,EAAOQ,SAAWR,EAAOS,aAHtC,SAKGT,EAAOS,aAAe,iBAAmB,gBAG9C,iBAAKR,UAAWC,EAAAA,oBAAhB,WACE,iBAAMD,UAAWC,EAAAA,OAAjB,+BACA,SAAC,KAAD,CAASQ,GAAI,gBAAiBT,UAAWC,EAAAA,iBAAzC,yBAIF,gBAAKD,UAAWC,EAAAA,MAAhB,SAA+BF,EAAOW,gBAuBlD,EAfc,WACZ,IAAM7B,GAAU8B,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,cAClD,OAAIH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKE,WAC7B,SAAC,KAAD,CAAUN,GAAI,cAGrB,gBAAKT,UAAWC,EAAAA,QAAhB,UACE,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,qCACA,SAACrB,EAAD,CAAWC,QAASA","sources":["webpack://react-app-2.0/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__+wd9j\",\"loginArea\":\"Login_loginArea__QWPrB\",\"loginField\":\"Login_loginField__pyoBQ\",\"passwordField\":\"Login_passwordField__+IClB\",\"formControl\":\"Login_formControl__Yj7cj\",\"registrationRequest\":\"Login_registrationRequest__8uCNr\",\"signUp\":\"Login_signUp__4S+j5\",\"registrationLink\":\"Login_registrationLink__nFFa4\",\"confirmField\":\"Login_confirmField__XQVCg\",\"loginButton\":\"Login_loginButton__3rMeJ\",\"rememberMe\":\"Login_rememberMe__gahz2\",\"error\":\"Login_error__ByltQ\",\"errorLabel\":\"Login_errorLabel__P1c1-\",\"captcha\":\"Login_captcha__SfbCB\"};","import React from \"react\";\nimport { Navigate, NavLink } from \"react-router-dom\";\nimport styles from \"./Login.module.css\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginTC } from \"../../Redux/auth-reducer\";\n\nconst LoginForm = ({ captcha }) => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n    rememberMe: false,\n  };\n\n  const onSubmit = (values, { setSubmitting, setStatus }) => {\n    console.log(\"Form data\", values);\n    dispatch(\n      loginTC(\n        values.email,\n        values.password,\n        values.rememberMe,\n        values.captcha,\n        setStatus,\n        setSubmitting\n      )\n    );\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email(\"Invalid email format\")\n      .required(\"Required field\"),\n    password: Yup.string()\n      .required(\"Required field\")\n      .min(4, \"Must be longer than 3 characters\"),\n  });\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {(formik) => {\n        return (\n          <Form>\n            <div className={styles.loginField}>\n              <div className={styles.formControl}>\n                <span>Login:</span>\n                <div className={styles.errorLabel}>\n                  <div className={styles.error}>\n                    <ErrorMessage name=\"email\" />\n                  </div>\n                  <Field type=\"email\" name=\"email\" placeholder=\"E-mail\" />\n                </div>\n              </div>\n            </div>\n            <div className={styles.passwordField}>\n              <div className={styles.formControl}>\n                <span>Password:</span>\n                <div className={styles.error}>\n                  <ErrorMessage name=\"password\" className={styles.error} />\n                </div>\n                <Field type=\"password\" name=\"password\" placeholder=\"Password\" />\n              </div>\n            </div>\n            <div className={styles.confirmField}>\n              <div className={styles.rememberMe}>\n                <Field type=\"checkbox\" name=\"rememberMe\" />\n                remember me\n              </div>\n              {captcha && (\n                <div className={styles.captcha}>\n                  <img src={captcha} className={styles.captcha__thumb} />\n                  <Field\n                    type=\"text\"\n                    name=\"captcha\"\n                    className={styles.captcha__field}\n                  />\n                </div>\n              )}\n              <button\n                className={styles.loginButton}\n                type={\"submit\"}\n                disabled={!formik.isValid || formik.isSubmitting}\n              >\n                {formik.isSubmitting ? \"Please wait...\" : \"Sign in\"}\n              </button>\n            </div>\n            <div className={styles.registrationRequest}>\n              <span className={styles.signUp}>Haven't account?</span>\n              <NavLink to={\"/registration\"} className={styles.registrationLink}>\n                sign up\n              </NavLink>\n            </div>\n            <div className={styles.error}>{formik.status}</div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nconst Login = () => {\n  const captcha = useSelector((state) => state.auth.captchaURL);\n  if (useSelector((state) => state.auth.isAuth)) {\n    return <Navigate to={\"/profile\"} />;\n  }\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.loginArea}>\n        <h1>Sign in</h1>\n        <LoginForm captcha={captcha} />\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["LoginForm","captcha","dispatch","useDispatch","validationSchema","Yup","email","required","password","min","initialValues","rememberMe","onSubmit","values","setSubmitting","setStatus","console","log","loginTC","formik","className","styles","name","type","placeholder","src","disabled","isValid","isSubmitting","to","status","useSelector","state","auth","captchaURL","isAuth"],"sourceRoot":""}