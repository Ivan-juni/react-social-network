{"version":3,"file":"static/js/18.cefbe64b.chunk.js","mappings":"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","sources":["webpack://react-app-2.0/./src/components/Users/Users.module.css?b9d0","webpack://react-app-2.0/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","webpack://react-app-2.0/./src/components/Users/Form/UsersForm.module.css?7843","components/Users/Form/UsersForm.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Users_wrapper__OlyPm\",\"avatar__thumb\":\"Users_avatar__thumb__peHwj\",\"user__wrapper\":\"Users_user__wrapper__g8A1M\",\"users\":\"Users_users__oN5Ju\",\"user\":\"Users_user__ureKU\",\"right_block\":\"Users_right_block__iyM+3\",\"left_block\":\"Users_left_block__GPLkt\",\"follow\":\"Users_follow__Iacut\",\"pageCount\":\"Users_pageCount__fc-Od\",\"arrows\":\"Users_arrows__9divR\"};","// extracted by mini-css-extract-plugin\nexport default {\"pages\":\"Paginator_pages__xZaO7\",\"currentPage\":\"Paginator_currentPage__bX+-W\",\"lastPage\":\"Paginator_lastPage__mdeZm\"};","import React from \"react\";\nimport styles from \"./Paginator.module.css\";\nimport Pagination from \"@mui/material/Pagination\";\nimport {usersPageType} from \"../../../types/types\"\n\ntype PropsType = {\n  usersPage: usersPageType\n  currentPageChange: (page: number) => void\n}\n\nconst Paginator: React.FC<PropsType>  = ({ usersPage, currentPageChange }) => {\n\n  return (\n    <div className={styles.pages}>\n      <Pagination\n        count={Math.ceil(usersPage.usersCount / usersPage.pageSize)}\n        page={usersPage.currentPage}\n        onChange={(_, page) => {\n          currentPageChange(page);\n        }}\n        color=\"primary\"\n      />\n    </div>\n  );\n};\n\nexport default Paginator;\n","import React from \"react\";\nimport styles from \"./Users.module.css\";\nimport avatar from \"./../../images/ava-icon.jpeg\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  followThunkCreator,\n  unFollowThunkCreator,\n} from \"../../Redux/users-reducer.ts\";\nimport { usersPageType, userType } from \"../../types/types\";\n\ntype PropsType = {\n  usersPage: usersPageType\n  dispatch: any\n  user: userType\n}\n\nconst Users: React.FC<PropsType> = ({ user, dispatch, usersPage }) => {\n  return (\n    <div className={styles.user}>\n      <div className={styles.user__wrapper}>\n        <div className={styles.left_block}>\n          <div className={styles.avatar}>\n            <NavLink to={\"/profile/\" + user.id}>\n              <img\n                className={styles.avatar__thumb}\n                src={user.photos.small != null ? user.photos.small : avatar}\n                alt=\"avatar\"\n              />\n            </NavLink>\n          </div>\n          <div className={styles.follow}>\n            {user.followed ? (\n              <button\n                disabled={usersPage.isFollowingInProgress.includes(user.id)}\n                onClick={() => {\n                  dispatch(unFollowThunkCreator(user.id));\n                }}\n              >\n                Unfollow\n              </button>\n            ) : (\n              <button\n                disabled={usersPage.isFollowingInProgress.includes(user.id)}\n                onClick={() => {\n                  dispatch(followThunkCreator(user.id));\n                }}\n              >\n                Follow\n              </button>\n            )}\n          </div>\n        </div>\n        <div className={styles.right_block}>\n          <ul>\n            <li>{user.name}</li>\n            <li className={styles.location}>\n              {\"${user.address.city}, ${user.address.country}\"}\n            </li>\n            <li>{user.status}</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Users;\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"UsersForm_form__wrapper__L4elc\",\"fields\":\"UsersForm_fields__97jww\",\"submitBtn\":\"UsersForm_submitBtn__APvYk\",\"btn\":\"UsersForm_btn__PKGan\"};","import { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React from 'react';\nimport { FilterType, FormikType, RootState } from '../../../types/types';\nimport styles from \"./UsersForm.module.css\";\nimport { useSelector } from 'react-redux';\n\ntype PropsType = {\n  onFilterChanged: (filter: FilterType) => void\n}\n\nconst UsersForm: React.FC<PropsType> = React.memo(({ onFilterChanged }) => {\n    const filter = useSelector((state: RootState) => state.usersPage.filter)\n\n    type FormType = {\n        term: string\n        friend: string\n    }\n    const initialValues = {\n        term: filter.term,\n        friend: String(filter.friend)\n    };\n\n    const onSubmit = (values: FormType, { setSubmitting, setStatus } : FormikType) => {\n        const filter: FilterType = {\n            term: values.term,\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\n        }\n        \n        onFilterChanged(filter);\n        setSubmitting(false);\n    };\n\n    return (\n        <Formik\n        enableReinitialize\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n        >\n        {(formik) => {\n        return (\n            <Form>\n                <div className={styles.form__wrapper}>\n                    <div className={styles.fields}>\n                        <Field type=\"text\" name=\"term\" placeholder=\"Type name here...\" className={styles.term}/>\n                        <Field as=\"select\" name=\"friend\" className={styles.select}>\n                            <option value=\"null\">All</option>\n                            <option value=\"true\">Only followed</option>\n                            <option value=\"false\">Only unfollowed</option>\n                        </Field>\n                    </div>\n                    <div className={styles.submitBtn}>\n                        <button type=\"submit\" \n                                className={styles.btn} \n                                disabled={!formik.isValid || formik.isSubmitting}\n                        >Find</button>\n                    </div>\n                </div>\n                <ErrorMessage name=\"term\" className={styles.error}/>\n                <div className={styles.error}>{formik.status}</div>\n            </Form>\n            );\n        }}\n        </Formik>\n    );\n});\n\nexport default UsersForm;","import React from \"react\";\nimport styles from \"./Users.module.css\";\nimport Paginator from \"../common/Paginator/Paginator.tsx\";\nimport User from \"./User.tsx\";\nimport {FilterType, usersPageType} from \"../../types/types\"\nimport UsersForm from \"./Form/UsersForm.tsx\";\nimport { AppDispatch } from \"../../Redux/redux-store\";\n\ntype PropsType = {\n  usersPage: usersPageType\n  dispatch: AppDispatch\n  onFilterChanged: (filter: FilterType) => void\n  currentPageChange: (page: number) => void\n}\n\nconst Users: React.FC<PropsType> = ({ dispatch, usersPage, onFilterChanged, currentPageChange }) => {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.searchForm}>\n        <UsersForm dispatch={dispatch} onFilterChanged={onFilterChanged}/>\n      </div>\n      <div className={styles.paginator}>\n        <Paginator usersPage={usersPage} dispatch={dispatch} currentPageChange={currentPageChange}/>\n      </div>\n      <div className={styles.users}>\n        {usersPage.users.map((u) => (\n          <User user={u} usersPage={usersPage} dispatch={dispatch} key={u.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Users;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsersThunkCreator } from \"../../Redux/users-reducer.ts\";\nimport Users from \"./Users.tsx\";\nimport Preloader from \"../common/Preloader/Preloader.tsx\";\nimport { FilterType, RootState } from \"../../types/types\";\nimport { AppDispatch } from \"../../Redux/redux-store\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst UsersContainer: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const usersPage = useSelector((state: RootState) => state.usersPage);\n  \n  const currentPageChange = (page: number) => {\n    //dispatch(usersActions.updateNewCurrentPage(page));\n    dispatch(getUsersThunkCreator(page, usersPage.pageSize, usersPage.filter));\n  };\n\n  const onFilterChanged = (filter: FilterType) => {\n    dispatch(getUsersThunkCreator(1, usersPage.pageSize, filter));\n  } \n\n  useEffect(() => {\n    const termQuery = searchParams.get('term') || '';\n    const friendQuery = (searchParams.get('friend') === \"null\" || \"\") ? null : searchParams.get('friend') === \"true\" ? true : false;\n    const pageQuery =  Number((searchParams.get('page')) ? (searchParams.get('page')) : 1);\n    \n    const actualFilter = {term: termQuery, friend: friendQuery}\n\n    dispatch(getUsersThunkCreator(pageQuery, usersPage.pageSize, actualFilter));\n  }, []);\n\n  useEffect(()=>{\n    setSearchParams({term: usersPage.filter.term, friend: `${usersPage.filter.friend}`, page: `${usersPage.currentPage}`})\n  }, [usersPage.filter, usersPage.currentPage]);\n\n\n  return (\n    <>\n      {usersPage.isFetching ? (\n        <Preloader />\n      ) : (\n        <Users dispatch={dispatch} usersPage={usersPage} onFilterChanged={onFilterChanged} currentPageChange={currentPageChange}/>\n      )}\n    </>\n  );\n};\n\nexport default UsersContainer;\n\n"],"names":["usersPage","currentPageChange","className","styles","Pagination","count","Math","ceil","usersCount","pageSize","page","currentPage","onChange","_","color","user","dispatch","to","id","src","photos","small","avatar","alt","followed","disabled","isFollowingInProgress","includes","onClick","unFollowThunkCreator","followThunkCreator","name","status","React","onFilterChanged","filter","useSelector","state","initialValues","term","friend","String","enableReinitialize","onSubmit","values","setSubmitting","setStatus","formik","type","placeholder","as","value","isValid","isSubmitting","users","map","u","User","useDispatch","useSearchParams","searchParams","setSearchParams","useEffect","termQuery","get","friendQuery","pageQuery","Number","actualFilter","getUsersThunkCreator","isFetching","Preloader"],"sourceRoot":""}